name: Deploy to HPC with Singularity

on:
  workflow_run:
    workflows: ["Build and Push Docker Image"]
    types:
      - completed
    branches: [master, main]
  workflow_dispatch:  # Allow manual triggering
    inputs:
      docker_tag:
        description: 'Docker image tag to deploy'
        required: false
        default: 'v0.0.30'
        type: string

env:
  # The tag can come from the upstream workflow, manual input, or default to a fixed version
  DOCKER_TAG: ${{ github.event.inputs.docker_tag || 'v0.0.30' }}

jobs:
  deploy_to_hpc:
    name: Deploy Singularity Image to HPC
    runs-on: self-hosted
    steps:
      - name: Check out repository
        uses: actions/checkout@v3
        
      - name: Setup SSH Configuration
        run: |
          # Create a temporary SSH config with proper settings
          mkdir -p ~/.ssh/temp_config
          cat > ~/.ssh/temp_config/config << EOF
          Host bmicluster
            HostName bmiclusterp.chmcres.cchmc.org
            User pavb5f
            IdentityFile ~/.ssh/id_ed25519
            StrictHostKeyChecking no
            BatchMode yes
            IdentitiesOnly yes

          Host bmicluster-compute
            User pavb5f
            HostName bmi-460g10-04.chmcres.cchmc.org
            StrictHostKeyChecking no
            BatchMode yes
            IdentitiesOnly yes
            ProxyJump bmicluster
          EOF
          
          chmod 600 ~/.ssh/temp_config/config
          echo "SSH configuration created successfully"
      
      - name: Test SSH Connection
        run: |
          echo "Testing SSH connection to jump host..."
          ssh -F ~/.ssh/temp_config/config bmicluster "hostname && whoami" || {
            echo "ERROR: SSH connection to jump host failed"
            exit 1
          }
          
          echo "Testing SSH connection to compute node..."
          ssh -F ~/.ssh/temp_config/config bmicluster-compute "hostname && whoami" || {
            echo "ERROR: SSH connection to compute node failed"
            exit 1
          }
          
          echo "SSH connections verified successfully"
      
      - name: Make deployment script executable
        run: chmod +x scripts/deploy_to_hpc.sh
      
      - name: Copy deployment script to compute node
        run: |
          echo "Copying deployment script to compute node..."
          scp -F ~/.ssh/temp_config/config scripts/deploy_to_hpc.sh bmicluster-compute:/tmp/deploy_to_hpc.sh
          ssh -F ~/.ssh/temp_config/config bmicluster-compute "chmod +x /tmp/deploy_to_hpc.sh"
          echo "Deployment script copied successfully"
      
      - name: Execute deployment on compute node
        id: deploy
        run: |
          echo "Starting Singularity image deployment with version ${{ env.DOCKER_TAG }}..."
          ssh -F ~/.ssh/temp_config/config bmicluster-compute "/tmp/deploy_to_hpc.sh ${{ env.DOCKER_TAG }}" | tee deployment.log
      
      - name: Verify deployment
        run: |
          echo "Verifying deployment..."
          ssh -F ~/.ssh/temp_config/config bmicluster-compute "ls -la /data/barskilab/scidap_server/singularity_images/biowardrobe2_scidap-deseq:${{ env.DOCKER_TAG }}.sif" || {
            echo "ERROR: Failed to verify Singularity image exists"
            exit 1
          }
          
          version=$(ssh -F ~/.ssh/temp_config/config bmicluster-compute "cat /data/barskilab/scidap_server/singularity_images/scidap-deseq-version.txt")
          echo "Deployment verified. Current version: $version"
          # Store version for notification
          echo "::set-output name=deployed_version::$version"
      
      - name: Clean up remote script
        if: always()
        run: |
          ssh -F ~/.ssh/temp_config/config bmicluster-compute "rm -f /tmp/deploy_to_hpc.sh" || echo "Warning: Failed to clean up remote script"
          
      - name: Send notification
        if: always()
        uses: rtCamp/action-slack-notify@v2
        env:
          SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}
          SLACK_CHANNEL: deployments
          SLACK_COLOR: ${{ job.status }}
          SLACK_TITLE: "HPC Singularity Deployment"
          SLACK_MESSAGE: "Deployment of biowardrobe2/scidap-deseq:${{ env.DOCKER_TAG }} to HPC - Status: ${{ job.status }}"
          SLACK_FOOTER: "Deployed by GitHub Actions" 