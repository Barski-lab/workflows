name: Deploy to HPC with Singularity

on:
  workflow_run:
    workflows: ["Build and Push Docker Image"]
    types:
      - completed
  workflow_dispatch:  # Allow manual triggering

jobs:
  deploy:
    if: ${{ github.event.workflow_run.conclusion == 'success' || github.event_name == 'workflow_dispatch' }}
    runs-on: ubuntu-latest
    env:
      DOCKER_TAG: v0.0.30
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3
        
      - name: Make script executable
        run: chmod +x scripts/deploy_to_hpc.sh
      
      - name: Debug environment
        run: |
          echo "Working directory: $(pwd)"
          echo "Contents of scripts directory:"
          ls -la scripts/
          
      - name: Create SSH key
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.HPC_SSH_KEY }}" > ~/.ssh/id_ed25519
          chmod 600 ~/.ssh/id_ed25519
          ls -la ~/.ssh/id_ed25519
      
      - name: Setup SSH Config
        run: |
          cat > ~/.ssh/config << 'EOL'
          Host *
            StrictHostKeyChecking no
            UserKnownHostsFile=/dev/null
            LogLevel DEBUG3
            
          Host bmicluster
            HostName bmiclusterp.chmcres.cchmc.org
            User ${{ secrets.HPC_USER }}
            IdentityFile ~/.ssh/id_ed25519
            
          Host bmicluster-compute
            HostName bmi-460g10-04.chmcres.cchmc.org
            User ${{ secrets.HPC_USER }}
            ProxyCommand ssh -W %h:%p bmicluster
          EOL
          chmod 600 ~/.ssh/config
          
          echo "SSH config:"
          cat ~/.ssh/config
          
      - name: Debug SSH Connection to jumphost
        run: |
          echo "Testing connection to jumphost..."
          ssh -i ~/.ssh/id_ed25519 -v bmicluster "hostname && whoami"
          
      - name: Test full SSH Connection
        run: |
          echo "Testing connection to compute node..."
          ssh -i ~/.ssh/id_ed25519 -v bmicluster-compute "hostname && whoami && echo 'Connection successful!'"
        continue-on-error: true
        
      - name: Set inline deployment script
        run: |
          cat > deploy_inline.sh << 'EOL'
          #!/bin/bash
          set -e
          
          IMAGE_NAME="biowardrobe2/scidap-deseq"
          SINGULARITY_IMAGE_DIR="/data/barskilab/scidap_server/singularity_images"
          VERSION="v0.0.30"
          SINGULARITY_FILENAME="biowardrobe2_scidap-deseq:${VERSION}.sif"
          
          echo "Starting deployment on $(hostname) as $(whoami)"
          echo "Checking if directory exists:"
          mkdir -p ${SINGULARITY_IMAGE_DIR}
          ls -la ${SINGULARITY_IMAGE_DIR}
          
          echo "Loading singularity module..."
          module load singularity/3.7.0
          
          echo "Using Singularity: $(which singularity)"
          echo "Singularity version: $(singularity --version)"
          
          TEMP_DIR=$(mktemp -d)
          cd "${TEMP_DIR}"
          echo "Working in temporary directory: ${TEMP_DIR}"
          
          if [ -f "${SINGULARITY_IMAGE_DIR}/${SINGULARITY_FILENAME}" ]; then
            echo "Removing existing file: ${SINGULARITY_IMAGE_DIR}/${SINGULARITY_FILENAME}"
            rm "${SINGULARITY_IMAGE_DIR}/${SINGULARITY_FILENAME}"
          fi
          
          echo "Pulling ${IMAGE_NAME}:${VERSION} from Docker Hub..."
          singularity pull docker://${IMAGE_NAME}:${VERSION}
          
          PULLED_FILENAME=$(ls *.sif)
          if [ -z "${PULLED_FILENAME}" ]; then
            echo "Failed to pull Singularity image or locate .sif file"
            exit 1
          fi
          
          echo "Moving ${PULLED_FILENAME} to ${SINGULARITY_IMAGE_DIR}/${SINGULARITY_FILENAME}"
          mv "${PULLED_FILENAME}" "${SINGULARITY_IMAGE_DIR}/${SINGULARITY_FILENAME}"
          
          cd - > /dev/null
          rm -rf "${TEMP_DIR}"
          
          echo "Deployment complete!"
          echo "Image available at: ${SINGULARITY_IMAGE_DIR}/${SINGULARITY_FILENAME}"
          
          echo "${VERSION}" > "${SINGULARITY_IMAGE_DIR}/scidap-deseq-version.txt"
          EOL
          chmod +x deploy_inline.sh
          
      - name: Execute deployment on HPC (simplified)
        run: |
          # Copy the script directly
          scp -i ~/.ssh/id_ed25519 -v deploy_inline.sh bmicluster-compute:/tmp/deploy_inline.sh
          
          # Run it with detailed output
          ssh -i ~/.ssh/id_ed25519 -v bmicluster-compute "bash -x /tmp/deploy_inline.sh || (echo 'DEPLOYMENT FAILED' && exit 1)"
        
      - name: Cleanup
        if: always()
        run: |
          ssh -i ~/.ssh/id_ed25519 -v bmicluster-compute "rm -f /tmp/deploy_inline.sh" || true
          
      - name: Verify deployment
        if: success()
        run: |
          ssh -i ~/.ssh/id_ed25519 -v bmicluster-compute "ls -la /data/barskilab/scidap_server/singularity_images/biowardrobe2_scidap-deseq:*.sif && cat /data/barskilab/scidap_server/singularity_images/scidap-deseq-version.txt" 