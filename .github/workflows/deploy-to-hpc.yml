name: Deploy to HPC with Singularity

on:
  workflow_run:
    workflows: ["Build and Push Docker Image"]
    types:
      - completed
  workflow_dispatch:  # Allow manual triggering

jobs:
  debug:
    runs-on: self-hosted
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3
        
      - name: Debug environment
        run: |
          echo "Running as: $(whoami)"
          echo "Current directory: $(pwd)"
          echo "Host: $(hostname)"
          echo "PATH: $PATH"
          ls -la
          
      - name: Test SSH config
        run: |
          echo "SSH config:"
          cat ~/.ssh/config || echo "No SSH config found"
          
          echo "Testing SSH connection to bmicluster:"
          ssh -v bmicluster "hostname" || echo "Connection to bmicluster failed"
          
      - name: Check SSH keys
        run: |
          echo "Available SSH keys:"
          ls -la ~/.ssh/
          ssh-add -l || echo "No SSH keys in agent"
          
  deploy:
    needs: debug
    runs-on: self-hosted
    env:
      DOCKER_TAG: v0.0.30
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3
        
      - name: Make script executable
        run: chmod +x scripts/deploy_to_hpc.sh
      
      - name: Check scripts dir
        run: |
          echo "Current directory: $(pwd)"
          echo "Does scripts directory exist?"
          ls -la
          
          if [ -d "scripts" ]; then
            echo "Scripts directory exists"
            ls -la scripts/
          else
            echo "Scripts directory DOES NOT exist!"
          fi
          
          if [ -f "scripts/deploy_to_hpc.sh" ]; then
            echo "Deploy script exists"
            head -n 20 scripts/deploy_to_hpc.sh
          else
            echo "Deploy script DOES NOT exist!"
          fi
      
      - name: Verify SSH environment
        run: |
          echo "Testing SSH connection to jump host:"
          ssh -v bmicluster "hostname" || echo "Connection to bmicluster failed with exit code: $?"
          
          echo "Testing SSH connection to compute node:"
          ssh -v bmicluster-compute "hostname" || echo "Connection to bmicluster-compute failed with exit code: $?"
          
      - name: Test SCP command separately 
        run: |
          echo "Testing SCP command:"
          echo "Test content" > test-file.txt
          scp -v test-file.txt bmicluster-compute:/tmp/test-file.txt || echo "SCP failed with exit code: $?"
          
          echo "Verifying file copy:"
          ssh bmicluster-compute "cat /tmp/test-file.txt || echo 'File not found on remote'" 
          
      - name: Copy deployment script to HPC (with debug)
        run: |
          # First check if file exists
          if [ ! -f "scripts/deploy_to_hpc.sh" ]; then
            echo "ERROR: scripts/deploy_to_hpc.sh does not exist!"
            exit 1
          fi
          
          # Try to copy with verbose output
          echo "Copying script to HPC..."
          scp -v scripts/deploy_to_hpc.sh bmicluster-compute:/tmp/deploy_to_hpc.sh
          
          # Verify the copy worked
          echo "Verifying script was copied..."
          ssh bmicluster-compute "ls -la /tmp/deploy_to_hpc.sh || echo 'Script not found on remote'"
          
      - name: Execute deployment on HPC
        run: |
          echo "Executing deployment script on HPC..."
          ssh -v bmicluster-compute << 'EOF'
            echo "Setting script as executable..."
            chmod +x /tmp/deploy_to_hpc.sh
            
            echo "Running deployment script..."
            /tmp/deploy_to_hpc.sh ${{ env.DOCKER_TAG }} || echo "Deployment script failed with exit code: $?"
            
            echo "Cleaning up..."
            rm /tmp/deploy_to_hpc.sh  # Clean up
          EOF
          
      - name: Verify deployment
        if: always()  # Try to run even if previous step failed
        run: |
          echo "Checking deployment results..."
          ssh bmicluster-compute "ls -la /data/barskilab/scidap_server/singularity_images/biowardrobe2_scidap-deseq:*.sif || echo 'Image file not found' && cat /data/barskilab/scidap_server/singularity_images/scidap-deseq-version.txt || echo 'Version file not found'" 